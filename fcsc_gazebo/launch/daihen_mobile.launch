<?xml version="1.0"?>
<launch>
  <arg name="limited" default="false"/>
  <arg name="paused" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="arm_prefix" default=""/>
  <arg name="fcsc" default="false"/>

  <arg if="$(arg fcsc)" name="world_name" default="$(find fcsc_world)/world/FutureConvenienceStoreContest.world"/>
  <arg unless="$(arg fcsc)" name="world_name" default="$(find fcsc_gazebo)/worlds/empty_attacher.world"/>

  <!-- startup simulated world -->
  <include file="$(find fcsc_gazebo)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <!-- send robot urdf to param server -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find fcsc_description)/model/daihen_ur5.urdf.xacro'"/>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node if="$(arg fcsc)" name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -param robot_description -model daihen_ur5 -x 1.4 -y 4 -Y 1.57"/>
  <node unless="$(arg fcsc)" name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -param robot_description -model daihen_ur5"/>
  <!-- <node unless="$(arg fcsc)" name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -param robot_description -model daihen_ur5 -Y 1.57 -y -0.3"/> -->

  <include file="$(find fcsc_gazebo)/launch/controller_utils.launch"/>

  <!-- <rosparam file="$(find fcsc_gazebo)/controller/arm_controller_ur5.yaml" command="load" ns="/dulcinea_ur5"/>
  <rosparam file="$(find fcsc_gazebo)/controller/gripper_controller.yaml" command="load" ns="/dulcinea_ur5"/> -->
  <rosparam file="$(find fcsc_gazebo)/controller/arm_controller_ur5.yaml" command="load"/>
  <rosparam file="$(find fcsc_gazebo)/controller/gripper_controller.yaml" command="load"/>
  <rosparam file="$(find fcsc_gazebo)/controller/boad_joint_controller.yaml" command="load"/>

  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>
  <node name="gripper_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn gripper_controller" respawn="false" output="screen"/>
  <node name="boad_joint_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn boad_joint_controller" respawn="false" output="screen"/>

</launch>
