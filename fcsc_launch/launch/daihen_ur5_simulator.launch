<launch>
  <arg name="rviz"      default="true" />
  <arg name="visualize" default="true"/>
  <arg name="depth"     default="false" />
  <arg name="gazebo"    default="true" />
  <arg name="all"       default="false" />
  <arg name="onigiri"   default="false" />
  <arg name="bento"     default="false" />
  <arg name="drink"     default="false" />
  <arg name="sandwich"  default="false" />
  <arg name="ur5_demo"  default="false" />
  <arg name="fcsc"      default="false" />
  <arg name="shelf_detection" default="false"/>
  <arg name="use_simulator"   default="true" />
  <arg name="use_octomap"     default="false"/>
  <arg name="navigation"      default="true"/>
  <arg name="visual_frame_id" default="map"/>
  <arg name="maue"    default="false"/>
  <arg name="mayoko"  default="false"/>
  <arg name="naname"  default="true"/>

  <param name="use_simulator"   value="$(arg use_simulator)"/>
  <param name="visual_frame_id" value="$(arg visual_frame_id)"/>
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find fcsc_description)/model/daihen_ur5.urdf.xacro'"/>

  <rosparam command="load" file="$(find fcsc_description)/config/shelf_size.yaml" />
  <rosparam command="load" file="$(find fcsc_description)/config/stocking_area.yaml" />
  <rosparam command="load" file="$(find fcsc_moveit)/config/touch_links.yaml" />
  <rosparam command="load" file="$(find fcsc_perception)/config/scrap_sandwich_id.yaml"/>
  <rosparam command="load" file="$(find fcsc_perception)/config/shelf_marker_id.yaml"/>

  <node unless="$(arg navigation)" pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_0" args="0 0 0 0 0 0 map base_footprint 100" />

  <!-- <param if="$(arg ur5_demo)" name="visual_frame_id" value="world"/> -->
  <!-- <param name="attach_link" value="thumb_link"/> -->
  <!-- <param name="attach_link" value="left_ezgripper_lower_finger_1"/> -->

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="false"/>
    <rosparam param="/source_list">[/gazebo/joint_states, /ezgripper/joint_states]</rosparam>
    <param name="rate" value="50" />
  </node>

  <!-- Gazebo -->
  <include if="$(arg gazebo)" file="$(find fcsc_gazebo)/launch/daihen_ur5.launch">
    <arg unless="$(arg fcsc)" name="world_name" value="$(find fcsc_gazebo)/worlds/empty_attacher.world"/>
    <arg if="$(arg fcsc)" name="world_name" default="$(find fcsc_description)/world/FutureConvenienceStoreContest.world"/>
  </include>

  <!-- MoveIt! -->
  <include file="$(find daihen_ur5_moveit_config)/launch/daihen_ur5_moveit_planning_execution.launch">
    <arg name="use_octomap"   value="$(arg use_octomap)"/>
    <arg name="sim"           value="true"/>
    <arg name="maue"          value="false"/>
    <arg name="mayoko"        value="false"/>
    <arg name="naname"        value="true"/>
  </include>

  <!-- Rviz -->
  <include if="$(arg rviz)" file="$(find daihen_ur5_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true" />
    <arg name="debug" default="false" />
    <!-- <arg if="$(arg ur5_demo)" name="command_args" value="-d $(find daihen_ur5_moveit_config)/launch/moveit_ur5_demo.rviz" /> -->
  </include>

  <!-- tf node -->
  <include if="$(arg sandwich)" file="$(find fcsc_launch)/launch/sandwich_static_tf_publisher.launch" />
  <include if="$(arg ur5_demo)" file="$(find fcsc_launch)/launch/ur5_demo_stocking_area_tf.launch"/>
  <node unless="$(arg ur5_demo)" pkg="fcsc_tf" name="shelf_tf_broadcaster" type="shelf_tf_broadcaster"/>
  <!-- <node pkg="fcsc_tf" type="object_tf_broadcaster" name="object_tf_broadcaster"/> -->
  <node pkg="fcsc_tf" type="detected_object_tf_broadcaster" name="collision_object_tf_broadcaster" output="screen"/>
  <node pkg="fcsc_tf" type="grasped_object_tf_broadcaster" name="grasped_object_tf_broadcaster" output="screen"/>

  <!-- spawn objects -->
  <include if="$(arg all)" file="$(find timed_roslaunch)/launch/timed_roslaunch.launch">
    <arg name="time"      value="2" />
    <arg name="pkg"       value="fcsc_description" />
    <arg name="file"      value="spawn_products.launch" />
    <arg name="node_name" value="spawn_products"/>
  </include>
  <include if="$(arg onigiri)" file="$(find timed_roslaunch)/launch/timed_roslaunch.launch">
    <arg name="time"      value="2" />
    <arg name="pkg"       value="fcsc_description" />
    <arg name="file"      value="spawn_onigiri.launch" />
    <arg name="node_name" value="spawn_onigiri"/>
  </include>
  <include if="$(arg drink)" file="$(find timed_roslaunch)/launch/timed_roslaunch.launch">
    <arg name="time"      value="2" />
    <arg name="pkg"       value="fcsc_description" />
    <arg name="file"      value="spawn_drink.launch" />
    <arg name="node_name" value="spawn_drink"/>
  </include>
  <include if="$(arg bento)" file="$(find timed_roslaunch)/launch/timed_roslaunch.launch">
    <arg name="time"      value="2" />
    <arg name="pkg"       value="fcsc_description" />
    <arg name="file"      value="spawn_bento.launch" />
    <arg name="node_name" value="spawn_bento"/>
  </include>

  <!-- set home pose  -->
  <include file="$(find timed_roslaunch)/launch/timed_roslaunch.launch">
    <arg name="time"      value="10" />
    <arg name="pkg"       value="fcsc_description" />
    <arg name="file"      value="set_daihen_ur5_home_pose.launch" />
    <arg name="node_name" value="set_home_pose"/>
  </include>

  <node pkg="fcsc_moveit" name="fcsc_moveit_core" type="smach_daihen_ur5_moveit_core" output="screen">
    <param name="stop" value="false"/>
    <param name="max_velocity" value="0.2"/>
  </node>

  <include file="$(find robot_description)/launch/navigation.launch"/>

  <!-- FCSC perception nodes -->

  <param name="shelfA_marker_id" value="80"/>
  <param name="shelfB_marker_id" value="90"/>

  <node name="detect_object_server" pkg="fcsc_perception" type="detect_object_server" output="screen"/>

  <node name="shelf_detector" pkg="fcsc_perception" type="shelf_detector"/>

  <node name="ar_pose_to_object_pose_server" pkg="fcsc_perception" type="ar_pose_to_object_pose_server" output="screen">
    <param name="output_frame_id"    value="map"/>
    <param name="plane_frame_id"  value="shelfB_board_2"/>
    <param name="depth_frame_id"  value="camera_optical_frame"/>
  </node>

  <!-- ar_track_alvar for object detection -->
  <include file="$(find fcsc_perception)/launch/no_depth.launch">
    <arg name="marker_size"           value="3.0" /><!-- [cm] -->
  	<arg name="max_new_marker_error"  value="0.08" />
  	<arg name="max_track_error"       value="0.2"/>
    <arg name="cam_image_topic"       value="/camera/rgb/image_raw"/>
  	<arg name="cam_info_topic"        value="/camera/rgb/camera_info"/>
    <arg name="output_frame"          value="/camera_optical_link" />
  </include>

  <!-- ar_track_alvar for shelf detection -->
  <include file="$(find fcsc_perception)/launch/no_depth.launch" ns="shelf_detector">
  <!-- <include file="$(find fcsc_perception)/launch/no_depth_bundle.launch" ns="shelf_detector"> -->
    <arg name="marker_size"           value="5"/>
  	<arg name="max_new_marker_error"  value="0.08"/>
  	<arg name="max_track_error"       value="0.2" />
  	<arg name="cam_image_topic"       value="/camera/rgb/image_raw" />
  	<arg name="cam_info_topic"        value="/camera/rgb/camera_info" />
    <arg name="output_frame"          value="base_footprint" />
    <!-- <arg name="bundle_files"          value="$(find fcsc_perception)/config/shelf_A_5cm_markers.xml" /> -->
  </include>

</launch>
