<!-- Default frames for Kinect/PSDK5 devices
     Places depth and RGB cameras in the same plane with 2.5cm baseline.
     Calibration may improve results, but these defaults are reasonably accurate.
-->
<launch>
  <arg name="camera" default="camera" />
  <arg name="tf_prefix" default="" />
  <arg name="sim" default="true"/>

  <arg name="pi/2" value="1.5707963267948966" />
  <arg name="optical_rotate" value="0 0 0 -$(arg pi/2) 0 -$(arg pi/2)" />

  <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link"
    args="0.008 0 0 0 0 0 kinect_link camera_link 100" />

  <group if="$(arg sim)">
    <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link2"
      args="0.004 -0.026 0.001 0 0 0 $(arg tf_prefix)/$(arg camera)_link $(arg tf_prefix)/$(arg camera)_depth_frame 100" />
    <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link3"
      args="0.0 0 0 0 0 0 $(arg tf_prefix)/$(arg camera)_link $(arg tf_prefix)/$(arg camera)_rgb_frame 100" />
    <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link4"
      args="0.004 -0.026 0.001 0 0 0 $(arg tf_prefix)/$(arg camera)_link $(arg tf_prefix)/$(arg camera)_ir_frame 100" />
    <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link5"
      args="$(arg optical_rotate) $(arg tf_prefix)/$(arg camera)_depth_frame $(arg tf_prefix)/$(arg camera)_depth_optical_frame  100" />
    <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link6"
      args="$(arg optical_rotate) $(arg tf_prefix)/$(arg camera)_rgb_frame $(arg tf_prefix)/$(arg camera)_rgb_optical_frame 100" />
    <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link7"
      args="$(arg optical_rotate) $(arg tf_prefix)/$(arg camera)_rgb_frame $(arg tf_prefix)/$(arg camera)_ir_optical_frame 100" />
  </group>

  <!-- <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link2"
    args="0.012 -0.026 0.001 0 0 0 $(arg tf_prefix)/$(arg camera)_link $(arg tf_prefix)/$(arg camera)_depth_frame 100" />
  <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link3"
    args="0.008 0 0 0 0 0 $(arg tf_prefix)/$(arg camera)_link $(arg tf_prefix)/$(arg camera)_rgb_frame 100" />
  <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link4"
    args="0.012 -0.026 0.001 0 0 0 $(arg tf_prefix)/$(arg camera)_link $(arg tf_prefix)/$(arg camera)_ir_frame 100" />
  <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link5"
    args="$(arg optical_rotate) $(arg tf_prefix)/$(arg camera)_depth_frame $(arg tf_prefix)/$(arg camera)_depth_optical_frame  100" />
  <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link6"
    args="$(arg optical_rotate) $(arg tf_prefix)/$(arg camera)_rgb_frame $(arg tf_prefix)/$(arg camera)_rgb_optical_frame 100" />
  <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link7"
    args="$(arg optical_rotate) $(arg tf_prefix)/$(arg camera)_rgb_frame $(arg tf_prefix)/$(arg camera)_ir_optical_frame 100" /> -->
</launch>

<!-- TODO Could instead store these in camera_pose_calibration format for consistency
     with user calibrations. Blocked on camera_pose_calibration having sane dependencies. -->
